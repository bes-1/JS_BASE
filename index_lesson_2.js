// Задание 1: Почему код даёт именно такие результаты?

// var a = 1, b = 1, c, d;
// c = ++a; alert(c);           // 2
// d = b++; alert(d);           // 1
// c = (2 + ++a); alert(c);      // 5
// d = (2 + b++); alert(d);      // 4
// alert(a);                    // 3
// alert(b);                    // 3
// Это задание на унарный оператор инкремента, если перед переменной стоит оператор, то сначала увеличивается переменная,
// а потом ее значение присваивается другой переменной. А если оператор стоит после переменной, то происходит сначала ее присваивание
// другой переменной, а после уже происходит увелечение на единицу. 

//Задание 2. Чему будет равен x в примере ниже?

// var a = 2;
// var x = 1 + (a *= 2);
// alert(x);
// Ответ равен 5, так сначала переменная "а" умножается на 2 и перезаписывается новым значением (4), после происходит
// сложение с единицей.

// Задание 3. Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. 
// Затем написать скрипт, который работает по следующему принципу:
// если a и b положительные, вывести их разность;
// если а и b отрицательные, вывести их произведение;
// если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом.

// let a = -1;
// let b = -2;
// if (a >= 0 && b >= 0) {
//     alert(a - b);
// } else if (a < 0 && b < 0) {
//     alert(a * b);
// } else {
//     alert(a + b);
// }

// Задание 4. Присвоить переменной а значение в промежутке [0..15]. 
// С помощью оператора switch организовать вывод чисел от a до 15.

// let a = parseInt(prompt('Введите значение от 0 до 15'));
// switch (a) {
//     case 0:
//         alert(0);
//     case 1:
//         alert(1);
//     case 2:
//         alert(2);
//     case 3:
//         alert(3);
//     case 4:
//         alert(4);
//     case 5:
//         alert(5);
//     case 6:
//         alert(6);
//     case 7:
//         alert(7);
//     case 8:
//         alert(8);
//     case 9:
//         alert(9);
//     case 10:
//         alert(10);
//     case 11:
//         alert(11);
//     case 12:
//         alert(12);
//     case 13:
//         alert(13);
//     case 14:
//         alert(14);
//     case 15:
//         alert(15);
//         break;
//     default:
//         alert('Вы ввели значение не от 0 до 15. Запустите еще раз скрипт и на этот раз будьте внимательнее!')
// }

// Задание 5. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. 
// Обязательно использовать оператор return.

// function sum(num1, num2) {
//     return num1 + num2;
// }

// function diff(num1, num2) {
//     return num1 - num2;
// }

// function div(num1, num2) {
//     return num1 / num2;
// }

// function mul(num1, num2) {
//     return num1 * num2;
// }

// // alert(sum(1, 2));
// // alert(diff(1, 2));
// // alert(div(1, 2));
// // alert(mul(1, 2));

// // Задание 3. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), 
// // где arg1, arg2 – значения аргументов, operation – строка с названием операции. 
// // В зависимости от переданного значения операции выполнить одну из арифметических операций 
// // (использовать функции из пункта 5) и вернуть полученное значение (использовать switch).

// function mathOperation(arg1, arg2, operation) {
//     switch (operation) {
//         case '+':
//             return alert(sum(arg1, arg2));
//         case '-':
//             return alert(diff(arg1, arg2));
//         case '/':
//             return alert(div(arg1, arg2));
//         case '*':
//             return alert(mul(arg1, arg2));
//         default:
//             alert('Вы ввели неверный оператор или операнды. Попробуйте еще раз.')
//             break;
//     }
// }

// mathOperation(1, 2, '+');
// mathOperation(1, 2, '-');
// mathOperation(1, 2, '/');
// mathOperation(1, 2, '*');
// mathOperation(1, 2, 'q');

// Задание 6. *Сравнить null и 0. Попробуйте объяснить результат.

// alert(`Тип данных 'null' = ${typeof (null)}, тип данных '0' = ${typeof (0)} \n 
// 'null == 0' = ${null == 0}, 'null === 0' = ${null === 0}`);
// alert(null > 0); // false
// alert(null == 0); // false
// alert(null >= 0); // true  <- в этом случае, при операторе сравнения null преобразуется в число!

// Задание 7. *С помощью рекурсии организовать функцию возведения числа в степень. 
// Формат: function power(val, pow), где val – заданное число, pow – степень.

// var sumNum = 1;
// function power(val, pow) {
//     sumNum *= val;
//     if (pow == 1) return sumNum;
//     return power(val, (pow - 1));
// }

// alert(power(2, 2));